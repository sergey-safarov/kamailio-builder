version: 2
jobs:
  default: &default
    docker:
      - image: alpine:edge
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="20.10.14"
            apk add curl
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Is builder image avaialable
          command: |
            tag=$(echo ${base_image}-${image_tag} | sed -e 's|safarov/||' -e 's|/|_|')
            if ! docker pull ${docker_repo_owner}/kamailio-builder:${tag}; then
                echo "builder image not exist, creating first time"
                docker build \
                  --build-arg base_image=${base_image} \
                  --build-arg image_tag=${image_tag} \
                  -t ${docker_repo_owner}/kamailio-builder:${tag} .
                docker login --username "${docker_repo_owner}" --password "${docker_repo_pass}"
                docker push ${docker_repo_owner}/kamailio-builder:${tag}
                rm -Rf ~/.docker
            else
                echo "builder 'kamailio-builder:${tag}' image already exist on hub.docker.com, doing nothing"
            fi
      - run:
          name: Is need update builder image
          command: |
            tag=$(echo ${base_image}-${image_tag} | sed -e 's|safarov/||' -e 's|/|_|')
            chmod 755 .circleci/is_fresh_image.sh
            docker create --rm \
                --name check_updates \
                --entrypoint=/is_fresh_image.sh \
                ${docker_repo_owner}/kamailio-builder:${tag}
            docker cp `pwd`/.circleci/is_fresh_image.sh check_updates:/is_fresh_image.sh
            if ! docker start -ai check_updates; then
                echo "refreshing builder image"
                docker rmi ${docker_repo_owner}/kamailio-builder:${tag}
                docker build \
                  --build-arg base_image=${base_image} \
                  --build-arg image_tag=${image_tag} \
                  -t ${docker_repo_owner}/kamailio-builder:${tag} .
                docker login --username "${docker_repo_owner}" --password "${docker_repo_pass}"
                docker push ${docker_repo_owner}/kamailio-builder:${tag}
                rm -Rf ~/.docker
            else
                echo "current 'kamailio-builder:${tag}' image is freesh, skiping image update";
            fi

  fedora-37:
    <<: *default
    environment:
      base_image: "fedora"
      image_tag: "37"

  fedora-38:
    <<: *default
    environment:
      base_image: "fedora"
      image_tag: "38"

  centos-6:
    <<: *default
    environment:
      base_image: "centos"
      image_tag: "6"

  centos-7:
    <<: *default
    environment:
      base_image: "centos"
      image_tag: "7"

  centos-8:
    <<: *default
    environment:
      base_image: "safarov/centos"
      image_tag: "8"

  centos-9:
    <<: *default
    environment:
      base_image: "safarov/centos"
      image_tag: "9"

  opensuse_leap-15:
    <<: *default
    environment:
      base_image: "opensuse/leap"
      image_tag: "15"

  opensuse_tumbleweed-latest:
    <<: *default
    environment:
      base_image: "opensuse/tumbleweed"
      image_tag: "latest"

workflows:
  version: 2
  build_and_test:
    jobs:
      - fedora-37:
          context: docker_creds
      - fedora-38:
          context: docker_creds
      - centos-6:
          context: docker_creds
      - centos-7:
          context: docker_creds
      - centos-8:
          context: docker_creds
      - centos-9:
          context: docker_creds
      - opensuse_leap-15:
          context: docker_creds
      - opensuse_tumbleweed-latest:
          context: docker_creds
